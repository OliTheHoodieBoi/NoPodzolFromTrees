plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'dev.hoodieboi.npfl'
version = '1.2.1'

repositories {
    mavenCentral()
    maven { url = uri('https://repo.papermc.io/repository/maven-public/') }
    maven { url 'https://libraries.minecraft.net/' }
}

dependencies {
    compileOnly 'io.papermc.paper:paper-api:1.20-R0.1-SNAPSHOT'
    implementation 'me.lucko:commodore:2.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    testImplementation "net.kyori:adventure-text-minimessage:4.14.0"
    testImplementation 'io.papermc.paper:paper-api:1.19.4-R0.1-SNAPSHOT'
}

shadowJar {
    dependsOn build

    dependencies {
        exclude(dependency('com.mojang:brigadier'))
    }

    relocate 'me.lucko.commodore', group+'.commodore'
    classifier = null
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

test {
    useJUnitPlatform()
}
